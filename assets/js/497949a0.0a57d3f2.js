"use strict";(self.webpackChunkdocusaurus_portfolio_site=self.webpackChunkdocusaurus_portfolio_site||[]).push([[963],{2402:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var r=t(5893),a=t(1151);const i={title:"Start new project with Nx",sidebar_position:97},s=void 0,d={id:"current/starting-new-project-with-nx/index",title:"Start new project with Nx",description:"Starting Nx project for next and react app",source:"@site/my-learning-notes/current/97-starting-new-project-with-nx/index.md",sourceDirName:"current/97-starting-new-project-with-nx",slug:"/current/starting-new-project-with-nx/",permalink:"/my-learning-notes/current/starting-new-project-with-nx/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:97,frontMatter:{title:"Start new project with Nx",sidebar_position:97},sidebar:"firstDocSidebar",previous:{title:"Deploying PWA to GitPage with React and Vite",permalink:"/my-learning-notes/current/pwa-vite-gitpage/"},next:{title:"Learning in progress",permalink:"/my-learning-notes/current/learning-in-progress/"}},o={},c=[{value:"Starting Nx project for next and react app",id:"starting-nx-project-for-next-and-react-app",level:2},{value:"2. Starting Nx project for Next, React and Hardhat",id:"2-starting-nx-project-for-next-react-and-hardhat",level:2},{value:"2-1. Setting up hardhat and frontend app",id:"2-1-setting-up-hardhat-and-frontend-app",level:3},{value:"2-2 Setting up Wagmi, adding Next UI",id:"2-2-setting-up-wagmi-adding-next-ui",level:3},{value:"In progress...",id:"in-progress",level:2}];function l(n){const e={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h2,{id:"starting-nx-project-for-next-and-react-app",children:"Starting Nx project for next and react app"}),"\n",(0,r.jsxs)(e.p,{children:["Starting a new React project has been always confusing. I used to have a repo with all the webpack configs, eslint and jest set up and copy and paste the entire thing. I tried ",(0,r.jsx)(e.code,{children:"create-react-app"})," as well."]}),"\n",(0,r.jsx)(e.p,{children:"Now I am using Nx to create a multiple projects in one repo. In this way, I can create multiple react apps and next apps along with libraries to be shared between these apps."}),"\n",(0,r.jsx)(e.p,{children:"I first create a repo in GitHub and clone it. Then, I just run these nx commands and I'm ready to go in 5 minutes."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"yarn add nx@latest -D\nyarn nx init\nyarn add nx add @nx/react\nnx g @nx/react:app apps/react-app\n# Add lib for react\nnx g @nx/react:library libs/my-react-lib\n# Or just add lib\nnx g lib libs/my-lib\nnx add @nx/next\nnx g @nx/next:app apps/my-new-app\n# Add lib for next\nnx add @nx/next:lib\nnx g @nx/next:lib libs/my-next-lib\n"})}),"\n",(0,r.jsxs)(e.p,{children:["Then, I update ",(0,r.jsx)(e.code,{children:".prettierrc"})," and ",(0,r.jsx)(e.code,{children:"project.json"})," in the react app folder to support ",(0,r.jsx)(e.code,{children:"yarn nx dev ..."})," command instead of using the default ",(0,r.jsx)(e.code,{children:"serve"})," to align with next command. Additional eslint rules as well if necessary."]}),"\n",(0,r.jsx)(e.h2,{id:"2-starting-nx-project-for-next-react-and-hardhat",children:"2. Starting Nx project for Next, React and Hardhat"}),"\n",(0,r.jsx)(e.h3,{id:"2-1-setting-up-hardhat-and-frontend-app",children:"2-1. Setting up hardhat and frontend app"}),"\n",(0,r.jsx)(e.p,{children:"It's better to start with hardhat as it will install all the dependencies."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"yarn add hardhat -D\n# initialise hardhat in the current directory\nnpx hardhat init\n# move the code and config (including tsconfig) into a temp folder, temp-hardhat\n\n# Add nx lib\nyarn add nx@latest -D\nyarn nx init\n# Node - create project and move code from temp-hardhat\nyarn nx add @nx/node\nyarn nx g @nx/node:application apps/hardhat\n\n# Next js\nyarn nx add @nx/next\nyarn nx g @nx/next:app apps/next-auth\n# Add react lib - need to configure tailwind and next ui because no option to add automatically with this command\nnx g @nx/next:library libs/utils-wagmi\nnx g @nx/next:library libs/ui-components\n"})}),"\n",(0,r.jsx)(e.h3,{id:"2-2-setting-up-wagmi-adding-next-ui",children:"2-2 Setting up Wagmi, adding Next UI"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"yarn add wagmi viem@2.x @tanstack/react-query\n\n# https://nextui.org/docs/guide/installation\nyarn @nextui-org/react framer-motion\n"})}),"\n",(0,r.jsx)(e.h2,{id:"in-progress",children:"In progress..."}),"\n",(0,r.jsx)(e.p,{children:"Being validated..."}),"\n",(0,r.jsx)(e.p,{children:"List of eslint and jest related libs."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# eslint\nyarn add -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-config-next eslint-config-prettier eslint-plugin-cypress eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-plugin-react-hooks @eslint/js eslint-plugin-prettier eslint-plugin-jest\n# jest\nyarn add -D @nx/jest @testing-library/react jest jest-environment-jsdom jest-environment-node\n"})}),"\n",(0,r.jsxs)(e.p,{children:["Delete ",(0,r.jsx)(e.code,{children:"eslint.config.js"})," and add ",(0,r.jsx)(e.code,{children:".eslintrc.json"})," and ",(0,r.jsx)(e.code,{children:".eslintignore"}),". Update the import path in the app's ",(0,r.jsx)(e.code,{children:"eslint.config.js"})," to use ",(0,r.jsx)(e.code,{children:".eslintrc.json"}),"."]}),"\n",(0,r.jsxs)(e.p,{children:["Add ",(0,r.jsx)(e.code,{children:"jest.config.ts"})," at the root and the project folder."]}),"\n",(0,r.jsx)(e.p,{children:"Original"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:'const nx = require("@nx/eslint-plugin");\n\nmodule.exports = [\n  ...nx.configs["flat/base"],\n  ...nx.configs["flat/typescript"],\n  ...nx.configs["flat/javascript"],\n  {\n    ignores: ["**/dist"],\n  },\n  {\n    files: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"],\n    rules: {\n      "@nx/enforce-module-boundaries": [\n        "error",\n        {\n          enforceBuildableLibDependency: true,\n          allow: ["^.*/eslint(\\\\.base)?\\\\.config\\\\.[cm]?js$"],\n          depConstraints: [\n            {\n              sourceTag: "*",\n              onlyDependOnLibsWithTags: ["*"],\n            },\n          ],\n        },\n      ],\n    },\n  },\n  {\n    files: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"],\n    // Override or add rules here\n    rules: {},\n  },\n];\n'})})]})}function p(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>d,a:()=>s});var r=t(7294);const a={},i=r.createContext(a);function s(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:s(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);