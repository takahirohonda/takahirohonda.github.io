{"version":3,"file":"4ab92244ff833b4ec9e108902a8c9382d2776d19-1ad91dc652393a4bbee4.js","mappings":"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","sources":["webpack://gatsby-portfolio-site-example/./src/fec/AnimatedTitle/AnimatedTitle.styled.tsx","webpack://gatsby-portfolio-site-example/./src/fec/AnimatedTitle/AnimatedTitle.tsx","webpack://gatsby-portfolio-site-example/./src/fec/BlogTitle/BlogTitle.tsx","webpack://gatsby-portfolio-site-example/./src/fec/ContentContainer/ContentContainer.tsx","webpack://gatsby-portfolio-site-example/./src/fec/styles/globalStyles.ts","webpack://gatsby-portfolio-site-example/./src/fec/styles/breakpoints.ts","webpack://gatsby-portfolio-site-example/./src/fec/styles/fonts.tsx","webpack://gatsby-portfolio-site-example/./node_modules/hey-listen/dist/hey-listen.es.js","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/types.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/events/use-dom-event.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/events/utils.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/process.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/warn-once.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/PanSession.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://gatsby-portfolio-site-example/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { motion } from 'framer-motion'\nimport styled, { css } from 'styled-components'\n\nimport { BREAKPOINT, FredokaOne, LatoRegular } from '../styles'\n\nexport const H3Style = css`\n  font-size: 1.375rem;\n  line-height: 1.1;\n  ${LatoRegular}\n  @media screen and (min-width: ${BREAKPOINT.SM}px) {\n    font-size: 1.5rem;\n    line-height: 1.1;\n  }\n`\n\nexport const StyledBlogTitle = styled(motion.h3)`\n  color: red;\n  font-weight: bold;\n  ${H3Style}\n  ${FredokaOne}\n`\n\nexport const StyledTitleLogo: React.VFC = () => (\n  <StyledBlogTitle>MyDatahack</StyledBlogTitle>\n)\n","import React from 'react'\n\nimport { StyledBlogTitle } from './AnimatedTitle.styled'\n\nconst bounceAnimate = {\n  y: [0, 0, 0, -30, 0, -15],\n  scaleY: [0, 0, 0, 1.1, 0, 0, 1.05, 0.95, 1.02],\n}\n\nconst bounceTransition = {\n  duration: 2,\n  times: [0, 0.2, 0.4, 0.43, 0.53, 0.7, 0.8, 0.9],\n  type: [\n    {\n      ease: [0.215, 0.61, 0.355, 1],\n    },\n    {\n      ease: [0.215, 0.61, 0.355, 1],\n    },\n    {\n      ease: [0.755, 0.05, 0.855, 0.06],\n    },\n    {\n      ease: [0.755, 0.05, 0.855, 0.06],\n    },\n  ],\n}\nexport const AnimatedTitle: React.VFC = () => (\n  <StyledBlogTitle animate={bounceAnimate} transition={bounceTransition}>\n    MyDatahack\n  </StyledBlogTitle>\n)\n","import styled, { css } from 'styled-components'\n\nimport { BREAKPOINT, LatoRegular } from '../styles'\nimport { PropsWithOnlyChildren } from '../utils/commonTypes'\n\nexport const H2Style = css`\n  font-size: 1.5rem;\n  line-height: 1.1;\n  ${LatoRegular}\n  @media screen and (min-width: ${BREAKPOINT.SM}px) {\n    font-size: 1.875rem;\n  }\n`\n\nexport const StyledBlogTitle = styled.h1`\n  ${H2Style};\n  font-weight: bold;\n`\n\nexport const BlogTitle = ({ children }: PropsWithOnlyChildren) => (\n  <StyledBlogTitle>{children}</StyledBlogTitle>\n)\n","import styled from 'styled-components'\n\nimport { BREAKPOINT } from '../styles'\nimport { PropsWithOnlyChildren } from '../utils/commonTypes'\n\nexport const StyledOuterContentContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst StyledContentContainer = styled.div`\n  padding-right: 15px;\n  padding-left: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 100%;\n\n  @media (min-width: ${BREAKPOINT.SM}px) {\n    width: 750px;\n  }\n\n  @media (min-width: ${BREAKPOINT.MD}px) {\n    width: 970px;\n  }\n\n  @media (min-width: ${BREAKPOINT.LG}px) {\n    width: 1170px;\n  }\n\n  @media (min-width: ${BREAKPOINT.XL}px) {\n    width: 1370px;\n  }\n\n  @media (min-width: ${BREAKPOINT.XXL}px) {\n    width: 1504px;\n  }\n`\n\nexport const ContentContainer = ({ children }: PropsWithOnlyChildren) => (\n  <StyledContentContainer>{children}</StyledContentContainer>\n)\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  *,\n  *:after,\n  *:before {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: Merriweather, sans-serif;\n    background-color: white;\n  }\n\n  @font-face {\n    font-family: 'Lato';\n    font-style: normal;\n    font-weight: 400;\n    src: url('fonts/Lato/Lato-Regular.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Lato';\n    font-style: normal;\n    font-weight: 700;\n    src: url(fonts/Lato/Lato-Bold.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Lato';\n    font-style: normal;\n    font-weight: 300;\n    src: url(fonts/Lato/Lato-Light.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Lato';\n    font-style: italic;\n    font-weight: 400;\n    src: url(fonts/Lato/Lato-Italic.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Lato';\n    font-style: italic;\n    font-weight: 700;\n    src: url(fonts/Lato/Lato-BoldItalic.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Lato';\n    font-style: italic;\n    font-weight: 300;\n    src: url(fonts/Lato/Lato-Light.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Merriweather';\n    font-style: normal;\n    font-weight: 300;\n    src: url(fonts/Merriweather/Merriweather-Light.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Merriweather';\n    font-style: italic;\n    font-weight: 300;\n    src: url(fonts/Merriweather/Merriweather-LightItalic.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Merriweather';\n    font-style: normal;\n    font-weight: 400;\n    src: url(fonts/Merriweather/Merriweather-Regular.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Merriweather';\n    font-style: italic;\n    font-weight: 400;\n    src: url(fonts/Merriweather/Merriweather-Italic.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Merriweather';\n    font-style: normal;\n    font-weight: 700;\n    src: url(fonts/Merriweather/Merriweather-Bold.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Merriweather';\n    font-style: italic;\n    font-weight: 700;\n    src: url(fonts/Merriweather/Merriweather-BoldItalic.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Merriweather';\n    font-style: normal;\n    font-weight: 900;\n    src: url(fonts/Merriweather/Merriweather-Black.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Merriweather';\n    font-style: italic;\n    font-weight: 900;\n    src: url(fonts/Merriweather/Merriweather-BlackItalic.ttf') format('truetype');\n  }\n\n  @font-face {\n    font-family: 'Fredoka One';\n    font-style: normal;\n    font-weight: 400;\n    src: url('fonts/FredokaOne/FredokaOne-Regular.ttf');\n  }\n`\n","enum BREAKPOINT_NAME {\n  XS = 'XS',\n  SM = 'SM',\n  MD = 'MD',\n  LG = 'LG',\n  XL = 'XL',\n  XXL = 'XXL',\n}\n\ntype BreakpointProps = {\n  [key in BREAKPOINT_NAME]: number\n}\n\n// Based on https://tailwindcss.com/docs/responsive-design  + custom XXL\nexport const BREAKPOINT: BreakpointProps = {\n  [BREAKPOINT_NAME.XS]: 640, // tablet - portrait\n  [BREAKPOINT_NAME.SM]: 768, // tablet - landscape\n  [BREAKPOINT_NAME.MD]: 1024, // laptop - smaller\n  [BREAKPOINT_NAME.LG]: 1280, // laptop - medium\n  [BREAKPOINT_NAME.XL]: 1536, // desktop\n  [BREAKPOINT_NAME.XXL]: 1920, // desktop - extra wide\n}\n\nexport type BreakpointsProp = Array<string> & {\n  [key in BREAKPOINT_NAME]?: string\n}\n\nconst breakpoints: BreakpointsProp = Object.values(BREAKPOINT).map(\n  (b) => `${b / 16}em`\n)\n\n/* eslint-disable prefer-destructuring */\nbreakpoints.XS = breakpoints[0]\nbreakpoints.SM = breakpoints[1]\nbreakpoints.MD = breakpoints[2]\nbreakpoints.LG = breakpoints[3]\nbreakpoints.XL = breakpoints[4]\nbreakpoints.XXL = breakpoints[5]\n/* eslint-enable prefer-destructuring */\n\nexport { breakpoints }\n","import { css } from 'styled-components'\n\nexport const Merriweather = css`\n  font-family: Merriweather, serif;\n`\n\nexport const Lato = css`\n  font-family: Lato, sans-serif;\n`\n\nexport const FredokaOne = css`\n  font-family: 'Fredoka One', cursive;\n`\n\n// Use for both Lato & Merriweather\nexport const RegularFontWeight = css`\n  font-weight: 400;\n`\n\nexport const BoldFontWeight = css`\n  font-weight: 700;\n`\n\nexport const LightFontWeight = css`\n  font-weight: 300;\n`\n\nexport const LatoRegular = css`\n  ${Lato}\n  ${RegularFontWeight}\n`\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Browser-safe usage of process\n */\nconst defaultEnvironment = \"production\";\nconst env = typeof process === \"undefined\" || process.env === undefined\n    ? defaultEnvironment\n    : process.env.NODE_ENV || defaultEnvironment;\n\nexport { env };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["H3Style","css","LatoRegular","BREAKPOINT","SM","StyledBlogTitle","styled","motion","h3","withConfig","displayName","componentId","FredokaOne","bounceAnimate","y","scaleY","bounceTransition","duration","times","type","ease","AnimatedTitle","_jsx","animate","transition","children","H2Style","h1","BlogTitle","_ref","StyledContentContainer","div","MD","LG","XL","XXL","ContentContainer","GlobalStyles","createGlobalStyle","BREAKPOINT_NAME","XS","breakpoints","Object","values","map","b","Lato","RegularFontWeight","warning","invariant","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","z","transformPerspective","sortTransformProps","a","isCSSVariable","getValueAsType","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","length","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","eventHandler","button","supportsPointerEvents","window","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","env","warned","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","message","console","warn","add","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","i","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","cancel","index","splice","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","constructor","subscriptions","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","clearListeners","eventManagers","attach","passiveEffect","setWithVelocity","getPrevious","stop","Promise","resolve","stopAnimation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","appearStoreId","handoffOptimizedAppearAnimation","MotionAppearAnimations","animationId","currentTime","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","keyframeValues","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restSpeed","restDelta","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","timeout","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","featureTests","waapi","Element","results","supports","acceleratedValues","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","appearId","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","maxDepth","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","getVariant","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","super","arguments","getAttribute","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","documentNode","position","featureBundle"],"sourceRoot":""}