{"version":3,"file":"component---src-pages-words-tsx-9400e09b69eb9ee649cb.js","mappings":"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","sources":["webpack://gatsby-portfolio-site-example/./src/fec/Buttons/RandomiseButton/RandomiseButton.tsx","webpack://gatsby-portfolio-site-example/./src/fec/Space/index.tsx","webpack://gatsby-portfolio-site-example/./src/components/FlipCards/const.ts","webpack://gatsby-portfolio-site-example/./src/components/FlipCards/FlipCards.styled.tsx","webpack://gatsby-portfolio-site-example/./src/components/FlipCards/FlipCardSelect/FlipCardSelect.tsx","webpack://gatsby-portfolio-site-example/./src/components/FlipCards/FlipCards.tsx","webpack://gatsby-portfolio-site-example/./src/pages/words.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nconst StyledButton = styled.button`\n  width: 100px;\n  height: 30px;\n  border: 1px solid #04aa6d;\n  cursor: pointer;\n  background-color: white;\n  color: #04aa6d;\n  border-radius: 5px;\n\n  &:hover {\n    background-color: #04aa6d;\n    color: white;\n  }\n`\n\ninterface RandomiseButtonProps {\n  onClick: () => void\n}\nexport const RandomiseButton: React.VFC<RandomiseButtonProps> = ({\n  onClick,\n}) => {\n  const onClickHandler = () => {\n    onClick()\n  }\n  return (\n    <StyledButton role=\"button\" onClick={() => onClickHandler()}>\n      Randomise\n    </StyledButton>\n  )\n}\n","import styled from 'styled-components'\n\nimport { BREAKPOINT } from '../styles'\n\nexport const StyledSpace = styled.div`\n  margin: 30px;\n`\n\nexport const StyledContainerForFlipCard = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n","export const WORDS_2022 = 'Vocabulary 2022'\nexport const WORDS_2023 = 'Vocabulary 2023'\nexport const WORDS_2024 = 'Vocabulary 2024'\nexport const PHRASES_AND_GRAMMARS = 'Phrases and Grammars'\nexport const FIRST_LINE = 'First Line'\nexport const QUOTES = 'Quotes'\nexport const TRIVIA = 'Trivia'\nexport const CHORD_SUB_MAJ_9 = 'Chord Sub Maj 9'\n\nexport const OPTIONS = [\n  WORDS_2024,\n  WORDS_2023,\n  WORDS_2022,\n  PHRASES_AND_GRAMMARS,\n  FIRST_LINE,\n  QUOTES,\n  TRIVIA,\n  CHORD_SUB_MAJ_9,\n]\n","import { BREAKPOINT } from '@mdhnpm/react-mdh-blog-components'\nimport styled from 'styled-components'\n\nexport const RandomiseButtonContainer = styled.div`\n  margin: 0;\n  @media (min-width: ${BREAKPOINT.SM}px) {\n    margin-top: 20px;\n  }\n`\n","import React from 'react'\n\nimport { OPTIONS } from '../const'\nimport { SelectOptions } from '../FlipCards.types'\n\ninterface FlipCardsSelectProps {\n  selectedOption: SelectOptions\n  onChange: (value: SelectOptions) => void\n}\n\n// It's not a good idea to have the option array tightly coupled with the component.\n// OPTION should be a prop to make it more component like.\nexport const FlipCardSelect = ({\n  selectedOption,\n  onChange,\n}: FlipCardsSelectProps) => {\n  return (\n    <label htmlFor=\"card\">\n      Select Category: <br />\n      <select\n        name=\"card\"\n        id=\"card\"\n        data-testid=\"flipcard-select\"\n        value={selectedOption}\n        onChange={(e) => onChange(e.target.value as SelectOptions)}\n      >\n        {OPTIONS.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    </label>\n  )\n}\n","import { useState } from 'react'\nimport {\n  FlipCardsPhrasesAndGrammars,\n  FlipCardsQAndA,\n  FlipCardsVocab,\n  QuoteCards,\n} from '@mdhnpm/react-mdh-blog-components'\n\nimport firstLine from '../../data/flip-cards/firstLine.json'\nimport { chordSubstitutionMajor9 } from '../../data/flip-cards/music.json'\nimport phrase from '../../data/flip-cards/phraseAndGrammars.json'\nimport quotes from '../../data/flip-cards/quotes.json'\nimport trivia from '../../data/flip-cards/trivia.json'\nimport { words2022 } from '../../data/flip-cards/words_2022.json'\nimport { words2023 } from '../../data/flip-cards/words_2023.json'\nimport { words2024 } from '../../data/flip-cards/words_2024.json'\nimport { RandomiseButton } from '../../fec/Buttons'\nimport { StyledContainerForFlipCard } from '../../fec/Space'\nimport {\n  CHORD_SUB_MAJ_9,\n  FIRST_LINE,\n  PHRASES_AND_GRAMMARS,\n  QUOTES,\n  TRIVIA,\n  WORDS_2022,\n  WORDS_2023,\n  WORDS_2024,\n} from './const'\nimport { RandomiseButtonContainer } from './FlipCards.styled'\nimport { SelectOptions } from './FlipCards.types'\nimport { FlipCardSelect } from './FlipCardSelect'\n\nexport const FlipCards = () => {\n  const [reRender, setReRender] = useState(false)\n  const [selectedOption, setSelectedOption] =\n    useState<SelectOptions>(WORDS_2024)\n\n  const onClickHandler = () => {\n    setReRender(!reRender)\n  }\n\n  return (\n    <>\n      <StyledContainerForFlipCard>\n        <FlipCardSelect\n          selectedOption={selectedOption}\n          onChange={setSelectedOption}\n        />\n      </StyledContainerForFlipCard>\n      <StyledContainerForFlipCard>\n        {selectedOption === WORDS_2024 && (\n          <FlipCardsVocab content={words2024} />\n        )}\n        {selectedOption === WORDS_2023 && (\n          <FlipCardsVocab content={words2023} />\n        )}\n        {selectedOption === WORDS_2022 && (\n          <FlipCardsVocab content={words2022} />\n        )}\n\n        {selectedOption === PHRASES_AND_GRAMMARS && (\n          <FlipCardsPhrasesAndGrammars content={phrase.phrasesAndGrammars} />\n        )}\n        {selectedOption === FIRST_LINE && (\n          <QuoteCards content={firstLine.firstLine} />\n        )}\n        {selectedOption === QUOTES && <QuoteCards content={quotes.quotes} />}\n        {selectedOption === TRIVIA && (\n          <FlipCardsQAndA content={trivia.trivia} />\n        )}\n        {selectedOption === CHORD_SUB_MAJ_9 && (\n          <FlipCardsQAndA content={chordSubstitutionMajor9} />\n        )}\n        <RandomiseButtonContainer>\n          <RandomiseButton onClick={onClickHandler} />\n        </RandomiseButtonContainer>\n      </StyledContainerForFlipCard>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { FlipCards } from '../components/FlipCards'\nimport { ContentContainer, GlobalStyles } from '../fec'\nimport { StyledSpace } from '../fec/Space'\n\nconst WordsPage: React.FC = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <main>\n        <ContentContainer>\n          <StyledSpace />\n          <FlipCards />\n        </ContentContainer>\n      </main>\n    </>\n  )\n}\n\nexport default WordsPage\n"],"names":["StyledButton","styled","button","withConfig","displayName","componentId","RandomiseButton","_ref","onClick","_jsx","role","children","StyledSpace","div","StyledContainerForFlipCard","WORDS_2022","WORDS_2023","WORDS_2024","PHRASES_AND_GRAMMARS","FIRST_LINE","QUOTES","TRIVIA","CHORD_SUB_MAJ_9","OPTIONS","RandomiseButtonContainer","BREAKPOINT","SM","FlipCardSelect","selectedOption","onChange","_jsxs","htmlFor","name","id","value","e","target","map","option","FlipCards","reRender","setReRender","useState","setSelectedOption","_Fragment","FlipCardsVocab","content","words2024","words2023","words2022","FlipCardsPhrasesAndGrammars","phrase","QuoteCards","firstLine","quotes","FlipCardsQAndA","trivia","chordSubstitutionMajor9","onClickHandler","WordsPage","GlobalStyles","ContentContainer"],"sourceRoot":""}