{"version":3,"file":"component---src-pages-blog-list-tsx-3876f7fe6c85b5c8417c.js","mappings":"8MAEO,MAAMA,E,QAASC,QAAOC,GAAEC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAATJ,CAAS,6B,cCExB,MAAMK,EAAWA,KACtB,MAgBMC,GAhBOC,EAAAA,EAAAA,gBAAc,cAgBRC,OAAOC,MAE1B,OACEC,EAAAA,EAAAA,KAACX,EAAM,CAAAY,SACJL,EAAMM,KAAKC,IAAI,IAAAC,EAAAC,EAAA,OACdL,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAACC,IAAIJ,SAAiB,QAAbC,EAAJD,EAAMK,mBAAW,IAAAJ,OAAb,EAAJA,EAAmBK,OAAQ,GAAGR,SACrCE,SAAiB,QAAbE,EAAJF,EAAMK,mBAAW,IAAAH,OAAb,EAAJA,EAAmBK,SAFfP,EAAKQ,GAIT,KAEA,E,aC5BN,MAAMC,EAAaA,KACxB,MAiBMhB,GAhBJC,EAAAA,EAAAA,gBAAc,cAgBGgB,kBAAkBd,MAErC,OACEC,EAAAA,EAAAA,KAACX,EAAM,CAAAY,SACJL,EAAMM,KAAKC,IAAI,IAAAC,EAAAC,EAAA,OACdL,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACM,EAAAA,KAAI,CAACC,IAAIJ,SAAiB,QAAbC,EAAJD,EAAMK,mBAAW,IAAAJ,OAAb,EAAJA,EAAmBK,OAAQ,GAAGR,SACrCE,SAAiB,QAAbE,EAAJF,EAAMK,mBAAW,IAAAH,OAAb,EAAJA,EAAmBK,SAFfP,EAAKQ,GAIT,KAEA,EClBb,MAXqBG,KAEjBC,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,UAAU,YAAWhB,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,eACJD,EAAAA,EAAAA,KAACL,EAAQ,KACTK,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAACY,EAAU,M","sources":["webpack://gatsby-portfolio-site-example/./src/components/BlogList/BlogList.styled.tsx","webpack://gatsby-portfolio-site-example/./src/components/BlogList/BlogList.tsx","webpack://gatsby-portfolio-site-example/./src/components/MdPageList/MdPageList.tsx","webpack://gatsby-portfolio-site-example/./src/pages/blog-list.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const BlogUl = styled.ul`\n  list-style-type: circle;\n`\n","import { graphql, Link, useStaticQuery } from 'gatsby'\n\nimport { BlogUl } from './BlogList.styled'\n\nexport const BlogList = () => {\n  const data = useStaticQuery<Queries.getMdxDataForBlogListQuery>(graphql`\n    query getMdxDataForBlogList {\n      allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n        nodes {\n          id\n          frontmatter {\n            title\n            date\n            description\n            slug\n          }\n        }\n      }\n    }\n  `)\n\n  const posts = data.allMdx.nodes\n\n  return (\n    <BlogUl>\n      {posts.map((post) => (\n        <li key={post.id}>\n          <Link to={post?.frontmatter?.slug || ''}>\n            {post?.frontmatter?.title}\n          </Link>\n        </li>\n      ))}\n    </BlogUl>\n  )\n}\n","import { graphql, Link, useStaticQuery } from 'gatsby'\n\nimport { BlogUl } from '../BlogList/BlogList.styled'\n\nexport const MdPageList = () => {\n  const data =\n    useStaticQuery<Queries.getMarkdownPageDataForBlogListQuery>(graphql`\n      query getMarkdownPageDataForBlogList {\n        allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n          nodes {\n            id\n            frontmatter {\n              title\n              date\n              description\n              slug\n            }\n          }\n        }\n      }\n    `)\n\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <BlogUl>\n      {posts.map((post) => (\n        <li key={post.id}>\n          <Link to={post?.frontmatter?.slug || ''}>\n            {post?.frontmatter?.title}\n          </Link>\n        </li>\n      ))}\n    </BlogUl>\n  )\n}\n","import { BlogList } from '../components/BlogList'\nimport { Layout } from '../components/Layout'\nimport { MdPageList } from '../components/MdPageList'\n\nconst BlogListPage = () => {\n  return (\n    <Layout siteTitle=\"Blog List\">\n      <h2>Blog list</h2>\n      <BlogList />\n      <h2>Markdown pages</h2>\n      <MdPageList />\n    </Layout>\n  )\n}\n\nexport default BlogListPage\n"],"names":["BlogUl","styled","ul","withConfig","displayName","componentId","BlogList","posts","useStaticQuery","allMdx","nodes","_jsx","children","map","post","_post$frontmatter","_post$frontmatter2","Link","to","frontmatter","slug","title","id","MdPageList","allMarkdownRemark","BlogListPage","_jsxs","Layout","siteTitle"],"sourceRoot":""}