"use strict";(self.webpackChunkdocusaurus_portfolio_site=self.webpackChunkdocusaurus_portfolio_site||[]).push([[963],{2402:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=t(5893),r=t(1151);const i={title:"Start new project with Nx",sidebar_position:97},a=void 0,o={id:"current/starting-new-project-with-nx/index",title:"Start new project with Nx",description:"Starting a new React project has been always confusing. I used to have a repo with all the webpack configs, eslint and jest set up and copy and paste the entire thing. I tried create-react-app as well.",source:"@site/my-learning-notes/current/97-starting-new-project-with-nx/index.md",sourceDirName:"current/97-starting-new-project-with-nx",slug:"/current/starting-new-project-with-nx/",permalink:"/tk-blog/my-learning-notes/current/starting-new-project-with-nx/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:97,frontMatter:{title:"Start new project with Nx",sidebar_position:97},sidebar:"firstDocSidebar",previous:{title:"Current",permalink:"/tk-blog/my-learning-notes/category/current"},next:{title:"Learning in progress",permalink:"/tk-blog/my-learning-notes/current/learning-in-progress/"}},l={},c=[{value:"In progress...",id:"in-progress",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Starting a new React project has been always confusing. I used to have a repo with all the webpack configs, eslint and jest set up and copy and paste the entire thing. I tried ",(0,s.jsx)(n.code,{children:"create-react-app"})," as well."]}),"\n",(0,s.jsx)(n.p,{children:"Now I am using Nx to create a multiple projects in one repo. In this way, I can create multiple react apps and next apps along with libraries to be shared between these apps."}),"\n",(0,s.jsx)(n.p,{children:"I first create a repo in GitHub and clone it. Then, I just run these nx commands and I'm ready to go in 5 minutes."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"yarn add nx@latest -D\nyarn nx init\nyarn add nx add @nx/react\nnx g @nx/react:app apps/react-app\n# Add lib for react\nnx g @nx/react:library libs/my-react-lib\n# Or just add lib\nnx g lib libs/my-lib\nnx add @nx/next\nnx g @nx/next:app apps/my-new-app\n# Add lib for next\nnx add @nx/next:lib\nnx g @nx/next:lib libs/my-next-lib\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then, I update ",(0,s.jsx)(n.code,{children:".prettierrc"})," and ",(0,s.jsx)(n.code,{children:"project.json"})," in the react app folder to support ",(0,s.jsx)(n.code,{children:"yarn nx dev ..."})," command instead of using the default ",(0,s.jsx)(n.code,{children:"serve"})," to align with next command. Additional eslint rules as well if necessary."]}),"\n",(0,s.jsx)(n.h2,{id:"in-progress",children:"In progress..."}),"\n",(0,s.jsx)(n.p,{children:"Being validated..."}),"\n",(0,s.jsx)(n.p,{children:"List of eslint and jest related libs."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# eslint\nyarn add -D @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-config-next eslint-config-prettier eslint-plugin-cypress eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-plugin-react-hooks @eslint/js eslint-plugin-prettier eslint-plugin-jest\n# jest\nyarn add -D @nx/jest @testing-library/react jest jest-environment-jsdom jest-environment-node\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Delete ",(0,s.jsx)(n.code,{children:"eslint.config.js"})," and add ",(0,s.jsx)(n.code,{children:".eslintrc.json"})," and ",(0,s.jsx)(n.code,{children:".eslintignore"}),". Update the import path in the app's ",(0,s.jsx)(n.code,{children:"eslint.config.js"})," to use ",(0,s.jsx)(n.code,{children:".eslintrc.json"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Add ",(0,s.jsx)(n.code,{children:"jest.config.ts"})," at the root and the project folder."]}),"\n",(0,s.jsx)(n.p,{children:"Original"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const nx = require("@nx/eslint-plugin");\n\nmodule.exports = [\n  ...nx.configs["flat/base"],\n  ...nx.configs["flat/typescript"],\n  ...nx.configs["flat/javascript"],\n  {\n    ignores: ["**/dist"],\n  },\n  {\n    files: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"],\n    rules: {\n      "@nx/enforce-module-boundaries": [\n        "error",\n        {\n          enforceBuildableLibDependency: true,\n          allow: ["^.*/eslint(\\\\.base)?\\\\.config\\\\.[cm]?js$"],\n          depConstraints: [\n            {\n              sourceTag: "*",\n              onlyDependOnLibsWithTags: ["*"],\n            },\n          ],\n        },\n      ],\n    },\n  },\n  {\n    files: ["**/*.ts", "**/*.tsx", "**/*.js", "**/*.jsx"],\n    // Override or add rules here\n    rules: {},\n  },\n];\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var s=t(7294);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);