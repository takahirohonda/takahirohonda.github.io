"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[2510],{49255:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var n=o(74848),r=o(28453);const s={sidebar_position:27},i="IE11 Support for amazon-connect-chatjs",a={id:"Web/Frontend/ie11-support-amazon-connect-chatjs",title:"IE11 Support for amazon-connect-chatjs",description:"I recently built a chat widget that supports Amazon Connect Chatbot with amazon-connect-chatjs. It turned out the library does not support IE11 (see the issue I raised here). The good news is that if we add polyfills, we can make it work. AWS will probably update the library with IE support in the future. But for now, you need to include polyfills below.",source:"@site/docs/Web/Frontend/27.ie11-support-amazon-connect-chatjs.md",sourceDirName:"Web/Frontend",slug:"/Web/Frontend/ie11-support-amazon-connect-chatjs",permalink:"/docs/Web/Frontend/ie11-support-amazon-connect-chatjs",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:27,frontMatter:{sidebar_position:27},sidebar:"tutorialSidebar",previous:{title:"Troubleshooting Promise Polyfill Not Working as Expected",permalink:"/docs/Web/Frontend/troubleshoot-polyfill-not-working"},next:{title:"How to Bundle Audio File into JS App",permalink:"/docs/Web/Frontend/audio-file-js-app"}},c={},l=[];function p(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"ie11-support-for-amazon-connect-chatjs",children:"IE11 Support for amazon-connect-chatjs"}),"\n",(0,n.jsx)(t.p,{children:"I recently built a chat widget that supports Amazon Connect Chatbot with amazon-connect-chatjs. It turned out the library does not support IE11 (see the issue I raised here). The good news is that if we add polyfills, we can make it work. AWS will probably update the library with IE support in the future. But for now, you need to include polyfills below."}),"\n",(0,n.jsx)(t.p,{children:"If you want to include it in the bundle, you can just install core-js."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:'import "core-js/features/promise";\nimport "core-js/features/array/from";\nimport "core-js/features/object/assign";\nimport "core-js/features/object/values";\nimport "core-js/es/set";\n'})}),"\n",(0,n.jsxs)(t.p,{children:["The hardest one to figure out was Array.from. In IE11, if you do ",(0,n.jsx)(t.code,{children:"Array.from(new Set([1, 2, 3])"}),", it gives back the empty array without error. This is what is used to get the message in ",(0,n.jsx)(t.code,{children:"onMessage()"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"I personally think being able to support IE is one of the most critical front end skills. It is probably more important than using cutting-edge JS tricks that only work for Chrome because a lot of companies still want to support IE11. Some people hate it, but I had a lot of fun figuring this out!"}),"\n",(0,n.jsx)(t.p,{children:"For further information regarding adding polyfills in TypeScript bundle, check out this post"}),"\n",(0,n.jsx)(t.p,{children:"(2020-05-28)"})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>a});var n=o(96540);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);