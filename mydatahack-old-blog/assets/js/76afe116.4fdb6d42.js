"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[418],{75374:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var s=t(74848),o=t(28453);const r={sidebar_position:13},a="Index JSON In Postgres",i={id:"Infrastructure/DBA/index-json-pgres",title:"Index JSON In Postgres",description:"To maximise query efficiency for a relational database is to index the columns that are often used for joining or conditions. The awesome thing about querying JSON in Postgres is that you can index it to further optimise query performance.",source:"@site/docs/Infrastructure/DBA/13.index-json-pgres.md",sourceDirName:"Infrastructure/DBA",slug:"/Infrastructure/DBA/index-json-pgres",permalink:"/mydatahack-old-blog/docs/Infrastructure/DBA/index-json-pgres",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"How To Create Users and Grant Privileges in MySQL",permalink:"/mydatahack-old-blog/docs/Infrastructure/DBA/create-user-mysql"},next:{title:"How Postgres JSON Query Handles Missing Key",permalink:"/mydatahack-old-blog/docs/Infrastructure/DBA/pg-json-query-missing-key"}},d={},c=[];function l(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"index-json-in-postgres",children:"Index JSON In Postgres"}),"\n",(0,s.jsx)(n.p,{children:"To maximise query efficiency for a relational database is to index the columns that are often used for joining or conditions. The awesome thing about querying JSON in Postgres is that you can index it to further optimise query performance."}),"\n",(0,s.jsx)(n.p,{children:"In the previous post, we had a look at the new JSON data ingestion strategy by using the power of Postgres. If you haven\u2019t tried to load JSON directly into Postgres, you should check out the blog."}),"\n",(0,s.jsx)(n.p,{children:"To index JSON in Postgres, the JSON column has to be the jsonb data type (stores data in the binary json format), instead of json (stores data as string). If you have your column set as json, you can change the data type as below. To injest JSON, you should always use jsonb for better query performance and indexing capability."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE mongodb.restaurants_json\nALTER COLUMN data\nSET DATA TYPE jsonb\nUSING data::jsonb;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Postgres supports a few different indexing method. If you are indexing a single node (such as id or email) for joining or searching, B-Tree is the best one. Hash indexes are discouraged for not being WAL-logged (meaning not crash-safe and not replicated). If you are interested, this blog post explains it further."}),"\n",(0,s.jsx)(n.p,{children:"GiN (Generalised Inverted Index) is the way to go when the index maps many values to on row (like array or document). For further information about JSON Indexing variations, check out the blog post here."}),"\n",(0,s.jsx)(n.p,{children:"Let\u2019s have a look at how we can index the table we made in the previous post. Let\u2019s index id assuming this is the join key to another table. For a single value, you can index it as string."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"Create Index ind_btree_id On mongodb.restaurants_json Using BTREE ((data->>'Id'));\n"})}),"\n",(0,s.jsx)(n.p,{children:"Let\u2019s also index grades with GIN indexes. For GIN, you have to index it as jsonb data type."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"Create Index ind_gin_grades On mongodb.restaurants_json Using GIN ((data->'grades'));\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now, let\u2019s check out the indexes on the table. To check indexes, you need to query the pg_indexes table."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"Select * From pg_indexes Where tablename = 'restaurants_json';\n"})}),"\n",(0,s.jsx)(n.p,{children:"Let\u2019s drop indexes. Drop Index command takes a few optional options. I included concurrently and if exists. Concurrently prevents table locks when other processes are querying the table at the same time."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"Drop Index Concurrently If Exists  mongodb.ind_btree_id;\nDrop Index Concurrently If Exists mongodb.ind_gin_grades;\n"})}),"\n",(0,s.jsx)(n.p,{children:"May the index be with you!"}),"\n",(0,s.jsx)(n.p,{children:"(2018-02-23)"})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var s=t(96540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);