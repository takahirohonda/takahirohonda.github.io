"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[2028],{94369:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});var a=t(74848),r=t(28453);const c={sidebar_position:3},o="How to Avoid Async Try-Catch Hell",s={id:"Web/Node.js/async-try-catch-hell",title:"How to Avoid Async Try-Catch Hell",description:"his post is based on this excellent short youtube video..",source:"@site/docs/Web/Node.js/3.async-try-catch-hell.md",sourceDirName:"Web/Node.js",slug:"/Web/Node.js/async-try-catch-hell",permalink:"/mydatahack-old-blog/mydatahack-old-blog/Web/Node.js/async-try-catch-hell",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Data Provider Pattern with Jest",permalink:"/mydatahack-old-blog/mydatahack-old-blog/Web/Node.js/data-provider-pattern-jest"},next:{title:"TypeORM vs Prisma to build GraphQL APIs with TypeScript",permalink:"/mydatahack-old-blog/mydatahack-old-blog/Web/Node.js/typeORM-prisma-graphql"}},i={},l=[];function d(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"how-to-avoid-async-try-catch-hell",children:"How to Avoid Async Try-Catch Hell"}),"\n",(0,a.jsx)(n.p,{children:"his post is based on this excellent short youtube video.."}),"\n",(0,a.jsx)(n.p,{children:"Let\u2019s see async try-catch hell. If we do try-catch on every single async function, it creates a tower of terror. Welcome to try-catch hell."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"async function towerOfTerror() {\n  let a;\n  let b;\n  let c;\n\n  try {\n    a = await step1();\n  } catch (e) {\n    handle(e);\n  }\n\n  try {\n    b = await step2();\n  } catch (e) {\n    handle(e);\n  }\n\n  try {\n    c = await step3();\n  } catch (e) {\n    handle(e);\n  }\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"There are two ways we can avoid this."}),"\n",(0,a.jsx)(n.p,{children:"First of all, we can just catch the error by chaining it."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"async function useCatch() {\n  const a = await step1().catch((e) => handle(e));\n  const b = await step1().catch((e) => handle(e));\n  const c = await step1().catch((e) => handle(e));\n\n  return a + b + c;\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Alternatively, in the async function we use, we can return an array of data and error."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"async function handleTryCatch() {\n  try {\n    const data = await promise;\n    return [data, null];\n  } catch (e) {\n    console.error(e);\n    return [null, e];\n  }\n}\n\nasync function handleTryCatch2() {\n  try {\n    const data = await promise;\n    return [data, null];\n  } catch (e) {\n    console.error(e);\n    return [null, e];\n  }\n}\n\nasync function main() {\n  const [data, error] = await handleTryCatch();\n\n  if (error) {\n    // can do action here.\n  }\n\n  const [data2, error2] = await handleTryCatch2();\n  const [data3, error3] = await handleTryCatch3();\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Amazing!"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var a=t(96540);const r={},c=a.createContext(r);function o(e){const n=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);