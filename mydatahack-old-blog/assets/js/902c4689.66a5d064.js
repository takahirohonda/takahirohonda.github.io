"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[1874],{30467:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>g,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var a=e(74848),i=e(28453);const o={slug:"data-engineering/data-ingestion/python-xml-to-json",title:"Sending XML Payload and Converting XML Response to JSON with Python",tags:["Data Engineering","Data Ingestion","Python","QAS","XML"]},s=void 0,r={permalink:"/data-engineering/data-engineering/data-ingestion/python-xml-to-json",source:"@site/data-engineering/data-ingestion/2020-04-03-python-xml-to-json.md",title:"Sending XML Payload and Converting XML Response to JSON with Python",description:"If you need to interact with a REST endpoint that takes a XML string as a payload and returns another XML string as a response, this is the quick guide if you want to use Python.",date:"2020-04-03T00:00:00.000Z",tags:[{label:"Data Engineering",permalink:"/data-engineering/tags/data-engineering"},{label:"Data Ingestion",permalink:"/data-engineering/tags/data-ingestion"},{label:"Python",permalink:"/data-engineering/tags/python"},{label:"QAS",permalink:"/data-engineering/tags/qas"},{label:"XML",permalink:"/data-engineering/tags/xml"}],readingTime:.915,hasTruncateMarker:!0,authors:[],frontMatter:{slug:"data-engineering/data-ingestion/python-xml-to-json",title:"Sending XML Payload and Converting XML Response to JSON with Python",tags:["Data Engineering","Data Ingestion","Python","QAS","XML"]},unlisted:!1,prevItem:{title:"Sending XML Payload and Converting XML Response to JSON with Node.js",permalink:"/data-engineering/data-engineering/data-ingestion/Node-xml-to-json"},nextItem:{title:"Downloading All Public GitHub Gist Files",permalink:"/data-engineering/data-engineering/data-ingestion/download-github-gist"}},g={authorsImageUrls:[]},d=[];function l(n){const t={p:"p",...(0,i.R)(),...n.components};return(0,a.jsx)(t.p,{children:"If you need to interact with a REST endpoint that takes a XML string as a payload and returns another XML string as a response, this is the quick guide if you want to use Python."})}function u(n={}){const{wrapper:t}={...(0,i.R)(),...n.components};return t?(0,a.jsx)(t,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}},28453:(n,t,e)=>{e.d(t,{R:()=>s,x:()=>r});var a=e(96540);const i={},o=a.createContext(i);function s(n){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function r(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),a.createElement(o.Provider,{value:t},n.children)}}}]);