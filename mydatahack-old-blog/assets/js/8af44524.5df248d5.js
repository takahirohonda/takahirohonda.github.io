"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[7148],{4423:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var o=t(74848),s=t(28453);const i={sidebar_position:10},a="10. How to specify which Node version to use in Github Actions",r={id:"Git/node-ver-gitbub-action",title:"10. How to specify which Node version to use in Github Actions",description:"When you want to specify which Node version to use in your Github Actions, you can use actions/setup-node@v2.",source:"@site/docs/Git/10-node-ver-gitbub-action.md",sourceDirName:"Git",slug:"/Git/node-ver-gitbub-action",permalink:"/mydatahack-old-blog/docs/Git/node-ver-gitbub-action",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"9. Should We Use Squash and Merge Option?",permalink:"/mydatahack-old-blog/docs/Git/squash-vs-merge"},next:{title:"ChatGPT Generated",permalink:"/mydatahack-old-blog/docs/category/chatgpt-generated"}},u={},c=[];function d(n){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"10-how-to-specify-which-node-version-to-use-in-github-actions",children:"10. How to specify which Node version to use in Github Actions"}),"\n",(0,o.jsx)(e.p,{children:"When you want to specify which Node version to use in your Github Actions, you can use actions/setup-node@v2."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yml",children:'name: Test and Build from feature branch\non:\n  push:\n    branches-ignore:\n      - "main"\njobs:\n  test-and-build-feature-branch:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        os: [ubuntu-latest]\n        node-version: [14.x]\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          persist-credentials: false\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v2\n        with:\n          node-version: ${{ matrix.node-version }}\n      - name: Install\n        run: |\n          yarn install\n      - name: Type Check\n        run: |\n          yarn type-check\n      - name: Lint\n        run: |\n          yarn lint\n      - name: Unit Tests\n        run: |\n          yarn test\n      - name: Module Build\n        run: |\n          yarn test\n      - name: Build\n        run: |\n          yarn build\n'})}),"\n",(0,o.jsx)(e.p,{children:"The alternative way is to use a node container."}),"\n",(0,o.jsxs)(e.p,{children:["When you try to use a publicly available node container like runs-on: node",":alpine-xx",", the pipeline gets stuck in a queue. runs-on is not for a container name. It\u2019s for a virtual machine hosted by GitHub and the best option for a Linux machine at the moment is ubuntu-latest."]}),"\n",(0,o.jsx)(e.p,{children:"In fact, GitHub supports runners for Ubuntu Linux (ubuntu-latest), Mac (mac-latest) and Windows (windows-latest). You can see other supported virtual environments here."}),"\n",(0,o.jsx)(e.p,{children:"Instead of adding a container name in runs-on, we can add container: [image-name]. Then the jobs will be run on the specified container."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yml",children:"name: Run Jobs in a container\non:\n  push:\n    branches:\n      - main\njobs:\n  run-in-container:\n    runs-on: ubuntu-latest\n    container: node:14-alpine\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v2\n        with:\n          persist-credentials: false\n      - name: Install\n        run: |\n          yarn install\n      - name: Unit Tests\n        run: |\n          yarn test\n      - name: Build\n        run: |\n          yarn build\n"})}),"\n",(0,o.jsx)(e.p,{children:"(2022-03-04)"})]})}function l(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>r});var o=t(96540);const s={},i=o.createContext(s);function a(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);