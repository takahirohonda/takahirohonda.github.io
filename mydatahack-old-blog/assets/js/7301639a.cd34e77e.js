"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[7051],{83638:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=n(74848),r=n(28453);const s={sidebar_position:1},a=void 0,i={id:"Infrastructure/AWS/semantic-release-aws",title:"semantic-release-aws",description:"Here is the usual pattern of getting the source from a git repository in AWS CodePipeline.",source:"@site/docs/Infrastructure/AWS/1.semantic-release-aws.md",sourceDirName:"Infrastructure/AWS",slug:"/Infrastructure/AWS/semantic-release-aws",permalink:"/mydatahack-old-blog/docs/Infrastructure/AWS/semantic-release-aws",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"AWS",permalink:"/mydatahack-old-blog/docs/category/aws"},next:{title:"What You Need To Know About SAM Templates",permalink:"/mydatahack-old-blog/docs/Infrastructure/AWS/sam-template"}},c={},l=[];function u(e){const t={code:"code",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Here is the usual pattern of getting the source from a git repository in AWS CodePipeline."}),"\n",(0,o.jsx)(t.p,{children:"In the pipeline, we use AWS CodeStart to connect to a repo and get the source. Then, we pass it to the other stages, like deploy or publish."}),"\n",(0,o.jsx)(t.p,{children:"For some unknown reasons, CodePipeline downloads the source as a zip from the repo instead of doing a git clone. This means the resource has no git meta data. Therefore, it doesn\u2019t work with semantic-release (which requires it to be run in a git repository)."}),"\n",(0,o.jsx)(t.p,{children:"Hence, you will see this error below if you are trying to run npx semantic-release in a downstream CodeBuild job."}),"\n",(0,o.jsx)(t.p,{children:"The semantic-release command must be executed from a Git repository.\n...\nPlease verify your CI configuration to make sure the semantic-release command is executed from the root of the cloned repository."}),"\n",(0,o.jsx)(t.p,{children:"The easiest approach is to use git clone in the publish job where you are calling the semantic-release command."}),"\n",(0,o.jsx)(t.p,{children:"Here is an example that uses Bitbucket. It works with any git repo. By setting the environment variable GIT_CREDENTIALS, the semantic release can also use it for versioning and change-logging."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"export BITBUCKET_USER=yourusername\nexport BB_TOKEN=yourpassword\nexport GIT_CREDENTIALS=$BITBUCKET_USER:$BB_TOKEN\ngit clone https://$GIT_CREDENTIALS@bitbucket.org/user/repo.git\nnpx semantic-release --no-ci\n"})}),"\n",(0,o.jsx)(t.p,{children:"Alternatively, you can copy and paste .git (the folder containing the git repo metadata) into the source from the early CodePipeline step. That\u2019s fine, too."}),"\n",(0,o.jsx)(t.p,{children:"(2022-02-26)"})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var o=n(96540);const r={},s=o.createContext(r);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);