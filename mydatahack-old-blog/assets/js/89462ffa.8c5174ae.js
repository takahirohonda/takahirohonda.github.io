"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[3639],{96138:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=n(74848),l=n(28453);const a={sidebar_position:2},s="Create Custom Python Module and Distribute with Git",i={id:"Infrastructure/Miscellaneous/custom-py-module",title:"Create Custom Python Module and Distribute with Git",description:"When we create a custom Python module, we can distribute it through a Git repository. By using a private repo, you can keep your module private and use it in your deployment pipeline by calling pip install from the private repo. Pretty cool trick.",source:"@site/docs/Infrastructure/Miscellaneous/2.custom-py-module.md",sourceDirName:"Infrastructure/Miscellaneous",slug:"/Infrastructure/Miscellaneous/custom-py-module",permalink:"/mydatahack-old-blog/docs/Infrastructure/Miscellaneous/custom-py-module",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"How to Persist Data in Local DynamoDB Docker Container",permalink:"/mydatahack-old-blog/docs/Infrastructure/Miscellaneous/local-dynamo-docker"},next:{title:"How to Set up Dual-Authentication to GitHub and AWS CodeCommit",permalink:"/mydatahack-old-blog/docs/Infrastructure/Miscellaneous/git-dual-auth"}},r={},c=[];function d(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"create-custom-python-module-and-distribute-with-git",children:"Create Custom Python Module and Distribute with Git"}),"\n",(0,o.jsx)(t.p,{children:"When we create a custom Python module, we can distribute it through a Git repository. By using a private repo, you can keep your module private and use it in your deployment pipeline by calling pip install from the private repo. Pretty cool trick."}),"\n",(0,o.jsx)(t.p,{children:"In this example, I created a simple Python module to do S3 download and upload and pushed it to a Git repo for pip installation."}),"\n",(0,o.jsx)(t.p,{children:"First of all, we need to have the right folder structure with setup.py."}),"\n",(0,o.jsx)(t.p,{children:"The folder structure will look like:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"s3uploader\n    - README.txt\n    - LICENSE.txt\n    - setup.py\n    - s3uploader\n        - s3.py\n        - __init__.py\n"})}),"\n",(0,o.jsx)(t.p,{children:"The key is to have the correct setup.py file. This describes the metadata about the module as well as is used for installation."}),"\n",(0,o.jsx)(t.p,{children:"setup.py"}),"\n",(0,o.jsx)(t.p,{children:"from distutils.core import setup"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"setup(\n    name='S3Uploader',\n    version='0.1demo',\n    packages=['s3uploader',],\n    license='Creative Commons Attribution-Noncommercial-Share Alike license',\n    long_description=open('README.txt').read(),\n    url='https://github.com/mydatahack/s3uploader'\n)\n"})}),"\n",(0,o.jsxs)(t.p,{children:["The top level project folder is the name of the module. There is another folder with the same name, including ",(0,o.jsx)(t.strong,{children:"init"}),".py and actual python code that contains the class."]}),"\n",(0,o.jsx)(t.p,{children:"The init file references the class that can be imported by the module."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"__init__.py\n\nfrom .s3 import S3\n"})}),"\n",(0,o.jsx)(t.p,{children:"Here is the actual S3 class that does upload and download."}),"\n",(0,o.jsx)(t.p,{children:"s3.py"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'import boto3\n\nclass S3:\n    """\n    S3 class with upload and download methods\n    For Python package demo\n    """\n\n    def __init__ (self, bucket, key, local_file):\n        """Initialising s3 object with bucket & key"""\n        self.bucket = bucket\n        self.key = key\n        self.local_file = local_file\n        self.s3 = boto3.resource(\'s3\')\n        self.s3_path = bucket + \'/\' + key\n\n    def upload(self):\n        """Upload file from local machine"""\n        print(\'Uploading {} to {}\'.format(self.local_file, self.s3_path))\n        self.s3.meta.client.upload_file(self.local_file, self.bucket, self.key)\n        print(\'Upload Completed\')\n\n    def download(self):\n        """Download file to local machine"""\n        print(\'Downloading {} to {}\'.format(self.s3_path, self.local_file))\n        self.s3.Bucket(self.bucket).download_file(self.key, self.local_file)\n        print(\'Download Completed\')\n'})}),"\n",(0,o.jsx)(t.p,{children:"Once everything is done, let\u2019s push it to the repo and all done. Installation is easy. You can pass the repo url in pip install as below."}),"\n",(0,o.jsx)(t.p,{children:"Installation"}),"\n",(0,o.jsxs)(t.p,{children:["pip install git+",(0,o.jsx)(t.a,{href:"https://github.com/mydatahack/s3uploader",children:"https://github.com/mydatahack/s3uploader"}),"\nYou can now test the module."]}),"\n",(0,o.jsx)(t.p,{children:"from s3uploader import S3"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"bucket= 'your.bucket.name'\nkey = 'data/transaction.json'\nlocal_file = '/tmp/transaction.json'\ns3Upload = S3(bucket, key, local_file)\n\ns3Upload.upload()\n\nlocal_file = './transaction.json'\ns3Download = S3(bucket, key, local_file)\n\ns3Download.download()\n"})}),"\n",(0,o.jsx)(t.p,{children:"(2018-09-26)"})]})}function u(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var o=n(96540);const l={},a=o.createContext(l);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);