"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[2836],{17420:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=o(74848),n=o(28453);const a={sidebar_position:22},s="Extending JQuery Interface for Bootstrap support \u2013 TypeScript",i={id:"Web/Frontend/jquery-bootstrap-ts",title:"Extending JQuery Interface for Bootstrap support \u2013 TypeScript",description:"If you are using TypeScript for Bootstrap, you need to extend the JQuery interface to add Bootstrap methods. For example, if you want to use the tab function from Bootstrap to programmatically trigger bootstrap tab click, the below code will have a type error.",source:"@site/docs/Web/Frontend/22.jquery-bootstrap-ts.md",sourceDirName:"Web/Frontend",slug:"/Web/Frontend/jquery-bootstrap-ts",permalink:"/mydatahack-old-blog/docs/Web/Frontend/jquery-bootstrap-ts",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:22,frontMatter:{sidebar_position:22},sidebar:"tutorialSidebar",previous:{title:"Executing Web Skimmers Inside CSS and SVG files",permalink:"/mydatahack-old-blog/docs/Web/Frontend/web-skimmer-inside.css"},next:{title:"Making Personal Portfolio Site with Jekyll",permalink:"/mydatahack-old-blog/docs/Web/Frontend/jekyll-portfolio-site"}},c={},d=[];function p(t){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,n.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"extending-jquery-interface-for-bootstrap-support--typescript",children:"Extending JQuery Interface for Bootstrap support \u2013 TypeScript"}),"\n",(0,r.jsx)(e.p,{children:"If you are using TypeScript for Bootstrap, you need to extend the JQuery interface to add Bootstrap methods. For example, if you want to use the tab function from Bootstrap to programmatically trigger bootstrap tab click, the below code will have a type error."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:'$("#mytarget").tab("show");\n'})}),"\n",(0,r.jsx)(e.p,{children:"With TypeScript, we can extend the interface by just adding the new types in the custom.d.ts file."}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-ts",children:"interface JQuery {\n  tab: (method: string) => void;\n}\n"})}),"\n",(0,r.jsx)(e.p,{children:"If you are using VS code, the autofix option will add this automatically. It usually adds it with any as default. It is sometimes OK, but if you want to type it, after using the autofix option, you can just edit the file."}),"\n",(0,r.jsx)(e.p,{children:"(2022-11-17)"})]})}function l(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(p,{...t})}):p(t)}},28453:(t,e,o)=>{o.d(e,{R:()=>s,x:()=>i});var r=o(96540);const n={},a=r.createContext(n);function s(t){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),r.createElement(a.Provider,{value:e},t.children)}}}]);