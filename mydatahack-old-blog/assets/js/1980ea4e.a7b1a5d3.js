"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[1886],{15464:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=t(74848),i=t(28453);const a={sidebar_position:39},r="Tips on Creating Android App from PWA",s={id:"Web/Frontend/android-app-pwa",title:"Tips on Creating Android App from PWA",description:"Progressive Web Apps (PWA) is a game changer for Mobile app development. We can turn our web page into a mobile compatible app with a little bit more effort. Create a manifesto file and write a service worker logic, then your website is a mobile app. Once you create PWA, you can package it as an Android app and place it in Google Play store by using Trusted Web Activities (TWA). Amazing.",source:"@site/docs/Web/Frontend/39.android-app-pwa.md",sourceDirName:"Web/Frontend",slug:"/Web/Frontend/android-app-pwa",permalink:"/docs/Web/Frontend/android-app-pwa",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:39,frontMatter:{sidebar_position:39},sidebar:"tutorialSidebar",previous:{title:"Creating a Form for Screen Reader Accessibility",permalink:"/docs/Web/Frontend/accessible-from"},next:{title:"Why Address Bar Is Not Hidden \u2013 Android App with TWA",permalink:"/docs/Web/Frontend/adressbar-not-hidden-android-twa"}},d={},l=[];function c(e){const n={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"tips-on-creating-android-app-from-pwa",children:"Tips on Creating Android App from PWA"}),"\n",(0,o.jsx)(n.p,{children:"Progressive Web Apps (PWA) is a game changer for Mobile app development. We can turn our web page into a mobile compatible app with a little bit more effort. Create a manifesto file and write a service worker logic, then your website is a mobile app. Once you create PWA, you can package it as an Android app and place it in Google Play store by using Trusted Web Activities (TWA). Amazing."}),"\n",(0,o.jsx)(n.p,{children:"Is it as easy as it sounds? I would say yes. I created an SPA with Preact (you can see here) and converted it into a mobile app placed in Google Play (check out the app here). Because I did no prior knowledge on any of these technologies (PWA, TWA and Android Studio), it took me about a week to convert my Preact app into an actual app appearing in Google Play, including the wait time to get my app approved (which took a few days)."}),"\n",(0,o.jsx)(n.p,{children:"As this activity is fairly straight forwards, there were a few gochas that I wished I had known. I am writing this to share them with you and save you from banging your head against the brick walls to resolve simple issues."}),"\n",(0,o.jsx)(n.p,{children:"Prerequisites"}),"\n",(0,o.jsx)(n.p,{children:"You have a PWA app (this post is not about creating PWA app).\nAndroid Studio is installed.\nGoogle Play account is created (if not, go here).\nTips"}),"\n",(0,o.jsx)(n.p,{children:"Here they come!"}),"\n",(0,o.jsx)(n.p,{children:"Tip 1: Read documentations"}),"\n",(0,o.jsx)(n.p,{children:"All you need to follow is this documentation: Using Trusted Web Activities although it has some flaws (which will be discussed in the coming tips). To supplement the knowledge, I also recommend you to read Trusted Web Activities Quick Start Guide. These two documentations supplement each other and fill the gaps for you."}),"\n",(0,o.jsx)(n.p,{children:"Tip 2: Be careful about customtabs library version"}),"\n",(0,o.jsxs)(n.p,{children:["In the module level build.gradle, you have to add dependencies for com.github.GoogleChrome.custom-tabs-client",":customtabs",". Picking the correct version is important. For some reason, the version currently on Trusted Web Activities does not work (91b4a1270b). Unless the documentation gets updated, don\u2019t use that one. There are two versions I verified that work (7ab7178ae0 and d08e93fce3). I don\u2019t know the differences. I ended up using 7ab7178ae0."]}),"\n",(0,o.jsx)(n.p,{children:"My setting looks like this in the dependencies section of build.gradle (Module: app):"}),"\n",(0,o.jsx)(n.p,{children:"implementation 'com.github.GoogleChrome.custom-tabs-client:customtabs:7ab7178ae0'\nTip 3: Icons from manifest.json are not used for the App"}),"\n",(0,o.jsx)(n.p,{children:"App does not use the icons from manifest.json. You need to add icons through Image Asset Studio in Android Studio. Same goes for splash screen. You need to configure it in Android Studio. For my app, I left this as default."}),"\n",(0,o.jsx)(n.p,{children:"Tip 4: Create correct assetlink.json"}),"\n",(0,o.jsx)(n.p,{children:"You do not need to write hacky custom JavaScript to hide the address bar. The reason why your app is still showing the address bar is the association between your site and app is not configured correctly. Read this blog post, Why Address Bar Is Not Hidden \u2013 Android App with TWA."}),"\n",(0,o.jsx)(n.p,{children:"Tip 5: Debugging App on Emulator on full-screen mode."}),"\n",(0,o.jsx)(n.p,{children:"Using Trusted Web Activities has a section on this. At first read, it wasn\u2019t clear. I just add some supplementary explanation."}),"\n",(0,o.jsx)(n.p,{children:"Firstly, go to the Emulator and enable Enable command line on non-rooted devices by typing chrom://flags in Chrome\u2019s address bar. This is only needed on the emulator."}),"\n",(0,o.jsx)(n.p,{children:"From your local machine, you need to run Android Debug Bridge command. On Windows machine this command is already installed in AppData folder in your home directory as C:\\Users\\yourUserName\\AppData\\Local\\Android\\Sdk\\platform-tools."}),"\n",(0,o.jsx)(n.p,{children:"The emulator needs to be running when the command is executed."}),"\n",(0,o.jsxs)(n.p,{children:['cd C:\\Users\\yourUserName\\AppData\\Local\\Android\\Sdk\\platform-tools.\nadb shell "echo \'_ --disable-digital-asset-link-verification-for-url="',(0,o.jsx)(n.a,{href:"https://airhorner.com%5C",children:"https://airhorner.com\\"}),'"\' > /data/local/tmp/chrome-command-line"\nTip 6: Version number needs to be updated to upload new version']}),"\n",(0,o.jsx)(n.p,{children:"When you upload a new version to Google Play, you need to update the versionCode and version Name in build.gradle (Module.app) and compile it."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:' defaultConfig {\n    applicationId "com.mdhsitecorequiz.sitecorecertificationexamquiz"\n    minSdkVersion 16\n    targetSdkVersion 29\n    versionCode 5\n    versionName "1.5"\n    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"\n}\n'})}),"\n",(0,o.jsx)(n.p,{children:"Tip 7: Don\u2019t freak out if the pre-launch report has crashes"}),"\n",(0,o.jsx)(n.p,{children:"If it works on the newer models of phones, don\u2019t worry about your app crashing in older androids. Event though it reports crashes for some phones, your app will be approved for publishing."}),"\n",(0,o.jsx)(n.p,{children:"Some of the old phone does not have the right chrome versions. Also don\u2019t worry too much about errors and warnings if they are coming from CustomTab module. It will probably work on most of the phones that you and your friends have."}),"\n",(0,o.jsx)(n.p,{children:"I wasted so much time on fixing every warnings and errors. That\u2019s what developers do, right. We ship products without any warnings or errors. In this case, I stopped worrying about it and decided to let technologies to catch up."}),"\n",(0,o.jsx)(n.p,{children:"My TWA configuration"}),"\n",(0,o.jsx)(n.p,{children:"Finally, let me share my TWA configurations I have done in Android Studio. I have touched 5 files as well as adding icon in res/mipmap. This configuration is the bear minimum to ship your app to the store."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-c",children:"build.gradle (Project)\n\nbuildscript {\n    ext.kotlin_version = '1.3.31'\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.4.2'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n        maven { url \"https://jitpack.io\" }\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\nbuild.gradle (Module)\n\napply plugin: 'com.android.application'\n\napply plugin: 'kotlin-android'\n\napply plugin: 'kotlin-android-extensions'\n\nandroid {\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n    compileSdkVersion 29\n    buildToolsVersion \"29.0.1\"\n    defaultConfig {\n        applicationId \"com.mdhsitecorequiz.sitecorecertificationexamquiz\"\n        minSdkVersion 16\n        targetSdkVersion 29\n        versionCode 5\n        versionName \"1.5\"\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\n    implementation 'androidx.appcompat:appcompat:1.1.0'\n    implementation 'androidx.core:core-ktx:1.1.0'\n    testImplementation 'junit:junit:4.12'\n    androidTestImplementation 'androidx.test:runner:1.2.0'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\n    implementation 'com.github.GoogleChrome.custom-tabs-client:customtabs:7ab7178ae0'\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"AndroidManifest.xml"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<manifest xmlns:android="http://schemas.android.com/apk/res/android"\n          xmlns:tools="http://schemas.android.com/tools"\n          package="com.mdhsitecorequiz.twa.sitecorecertificationexamquiz">\n\n    <application\n            android:allowBackup="true"\n            android:icon="@mipmap/sitecore_quiz_icon"\n            android:label="Sitecore Quiz"\n            android:roundIcon="@mipmap/sitecore_quiz_icon"\n            android:supportsRtl="true"\n            android:theme="@style/AppTheme"\n            tools:ignore="GoogleAppIndexingWarning">\n        <meta-data\n                android:name="asset_statements"\n                android:resource="@string/asset_statements"/>\n        <activity\n                android:name="android.support.customtabs.trusted.LauncherActivity"\n                android:theme="@style/Theme.LauncherActivity">\n\n            \x3c!-- Edit android:value to change the url opened by the TWA --\x3e\n            <meta-data\n                    android:name="android.support.customtabs.trusted.DEFAULT_URL"\n                    android:value="https://mydatahack.github.io/sitecore-exam-prep/" />\n\n            \x3c!-- This intent-filter adds the TWA to the Android Launcher --\x3e\n            <intent-filter>\n                <action android:name="android.intent.action.MAIN" />\n                <category android:name="android.intent.category.LAUNCHER" />\n            </intent-filter>\n\n            \x3c!--\n              This intent-filter allows the TWA to handle Intents to open\n              airhorner.com.\n            --\x3e\n            <intent-filter android:autoVerify="true">\n                <action android:name="android.intent.action.VIEW"/>\n                <category android:name="android.intent.category.DEFAULT" />\n                <category android:name="android.intent.category.BROWSABLE"/>\n\n                \x3c!-- Edit android:host to handle links to the target URL--\x3e\n                <data\n                        android:scheme="https"\n                        android:host="mydatahack.github.io"/>\n            </intent-filter>\n        </activity>\n    </application>\n</manifest>\n'})}),"\n",(0,o.jsx)(n.p,{children:"res/values/string.xml"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<resources>\n    <string name="app_name">Sitecore Quiz</string>\n    <string name="asset_statements">\n        [{\n        \\"relation\\": [\\"delegate_permission/common.handle_all_urls\\"],\n        \\"target\\": {\n        \\"namespace\\": \\"web\\",\n        \\"site\\": \\"https://mydatahack.github.io\\"}\n        }]\n    </string>\n</resources>\n'})}),"\n",(0,o.jsx)(n.p,{children:"res/values/style.xml"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<resources>\n    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">\n        <item name="android:windowActionBar">false</item>\n        <item name="android:windowNoTitle">true</item>\n        <item name="android:windowFullscreen">true</item>\n    </style>\n    <style name="Theme.LauncherActivity" parent="Theme.AppCompat.Light.DarkActionBar">\n        <item name="android:windowAnimationStyle">@null</item>\n        <item name="android:windowIsTranslucent">false</item>\n        <item name="android:windowNoTitle">true</item>\n        <item name="android:windowBackground">@android:color/background_light</item>\n        <item name="android:backgroundDimEnabled">false</item>\n    </style>\n</resources>\n'})}),"\n",(0,o.jsx)(n.p,{children:"(2019-09-14)"})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(96540);const i={},a=o.createContext(i);function r(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);