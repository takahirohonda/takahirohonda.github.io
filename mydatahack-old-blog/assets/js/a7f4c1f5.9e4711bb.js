"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[3674],{74162:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var t=r(74848),n=r(28453);const a={sidebar_position:12},i="How To Create Users and Grant Privileges in MySQL",o={id:"Infrastructure/DBA/create-user-mysql",title:"How To Create Users and Grant Privileges in MySQL",description:"Managing user access in MySQL is similar to Postgres (see Postgres user creation here). You can either manage the access privileges through roles or give privileges directly to users.",source:"@site/docs/Infrastructure/DBA/12.create-user-mysql.md",sourceDirName:"Infrastructure/DBA",slug:"/Infrastructure/DBA/create-user-mysql",permalink:"/docs/Infrastructure/DBA/create-user-mysql",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"tutorialSidebar",previous:{title:"Top 10 Configuration Parameters to Tune PostgreSQL for Better Performance",permalink:"/docs/Infrastructure/DBA/pg-config"},next:{title:"Index JSON In Postgres",permalink:"/docs/Infrastructure/DBA/index-json-pgres"}},c={},l=[];function d(e){const s={code:"code",h1:"h1",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"how-to-create-users-and-grant-privileges-in-mysql",children:"How To Create Users and Grant Privileges in MySQL"}),"\n",(0,t.jsx)(s.p,{children:"Managing user access in MySQL is similar to Postgres (see Postgres user creation here). You can either manage the access privileges through roles or give privileges directly to users."}),"\n",(0,t.jsx)(s.p,{children:"This post is a quick reference for granting privileges to users. Let\u2019s have a look at a simple use case."}),"\n",(0,t.jsx)(s.p,{children:"We would like to create a user called writer with full access to test, usermanaged, datamart, and staging schemas and read only access to sakila, sys and world schemas."}),"\n",(0,t.jsx)(s.p,{children:"First of all, let\u2019s create the user with password."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sql",children:"CREATE USER 'writer' IDENTIFIED BY 'Password1';\n"})}),"\n",(0,t.jsx)(s.p,{children:"Now, we can add privileges to the user. MySQL does not allow to have a list of databases in the grant statement. You need to do it by schema. For the table, you can use the wild card asterisk."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sql",children:"GRANT ALL Privileges ON test.* TO 'writer';\nGRANT ALL Privileges ON usermanaged.* TO 'writer';\nGRANT ALL Privileges ON datamart.* TO 'writer';\nGRANT ALL Privileges ON staging.* TO 'writer';\nGRANT SELECT ON sakila.* TO 'writer';\nGRANT SELECT ON sys.* TO 'writer';\nGRANT SELECT ON world.* TO 'writer';\n"})}),"\n",(0,t.jsx)(s.p,{children:"We also create a read only user who only has read access to all schemas."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sql",children:"CREATE USER 'readonly' IDENTIFIED BY 'Password1';\n"})}),"\n",(0,t.jsx)(s.p,{children:"If the permission is given to all schemas and tables, we can use * as below."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-sql",children:"GRANT SELECT ON *.* TO 'readonly';\n"})}),"\n",(0,t.jsx)(s.p,{children:"REFERENCE"}),"\n",(0,t.jsx)(s.p,{children:"CREATE USER Syntax\nGRANT Syntax\nUsing Roles"}),"\n",(0,t.jsx)(s.p,{children:"(2018-03-29)"})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>o});var t=r(96540);const n={},a=t.createContext(n);function i(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);