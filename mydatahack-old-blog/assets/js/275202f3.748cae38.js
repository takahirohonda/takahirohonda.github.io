"use strict";(self.webpackChunkmydatahack_blog_site=self.webpackChunkmydatahack_blog_site||[]).push([[6252],{18784:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var t=s(74848),o=s(28453);const r={sidebar_position:1},a="Running Jobs with Informatica Cloud REST API",i={id:"ETL/informatica/cloud-rest-api",title:"Running Jobs with Informatica Cloud REST API",description:"Informatica Cloud offers REST API for us to interact with the platform programmatically. At this point in time, the latest official reference is found here. In this post, we are going to use Python to trigger jobs through API.",source:"@site/docs/ETL/informatica/1.cloud-rest-api.md",sourceDirName:"ETL/informatica",slug:"/ETL/informatica/cloud-rest-api",permalink:"/docs/ETL/informatica/cloud-rest-api",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Informatica",permalink:"/docs/category/informatica"},next:{title:"How To Rename Mapping Job In Informatica Cloud",permalink:"/docs/ETL/informatica/rename-mapping-job"}},d={},c=[];function p(e){const n={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"running-jobs-with-informatica-cloud-rest-api",children:"Running Jobs with Informatica Cloud REST API"}),"\n",(0,t.jsx)(n.p,{children:"Informatica Cloud offers REST API for us to interact with the platform programmatically. At this point in time, the latest official reference is found here. In this post, we are going to use Python to trigger jobs through API."}),"\n",(0,t.jsx)(n.p,{children:"Triggering a job is a 2-step process. We need to authenticate with a username and password to retrieve a temporary session id. Then, we can make an API call by using the id. Informatica has an example of running jobs through API with curl here."}),"\n",(0,t.jsx)(n.p,{children:"Once you understand this process, all the APIs work the same. If you are looking for something specific, you can always look for it in the documentation."}),"\n",(0,t.jsx)(n.p,{children:"Loading Modules"}),"\n",(0,t.jsx)(n.p,{children:"We are using the requests module for REST API calls. We also need the json module to convert dictionary to string format of JSON."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import requests\nimport json\nimport sys\n"})}),"\n",(0,t.jsx)(n.p,{children:"Authentication"}),"\n",(0,t.jsx)(n.p,{children:"The base URL is the same one as you use to log in through the browser. You do not need to specify org as the user name is unique. The user information needs to be passed as a string, rather than as a dictionary."}),"\n",(0,t.jsx)(n.p,{children:"On a successful attempt, it returns a session id and server URL which are to be used for subsequent API calls."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def get_session_id(username, password):\n    '''Authenticate with username and password and\n       retrieve icSessionId and serverUrl that are used for Subsequent API calls'''\n    session_id = ''\n    data = {'@type': 'login', 'username': username, 'password': password}\n    url = \"https://app.informaticaondemand.com/ma/api/v2/user/login\"\n    headers = {'Content-Type':'application/json', 'Accept':'application/json'}\n    # We need to pass data in string instead of dict so that the data gets posted directly.\n    r = requests.post(url, data=json.dumps(data), headers=headers)\n\n    print('API Response Status Code: ' + str(r.status_code))\n\n    if r.status_code == 200:\n        session_id = r.json()[\"icSessionId\"]\n        server_url = r.json()[\"serverUrl\"]\n        print('Session Id: ' + session_id)\n    else:\n        print('API call failed:')\n        print(r.headers)\n        print(r.json())\n        sys.exit(1)\n\n    return session_id, server_url\n"})}),"\n",(0,t.jsx)(n.p,{children:"Triggering Job"}),"\n",(0,t.jsx)(n.p,{children:"The end point for starting a job is \u2018api/v2/job\u2019. This comes after the server URL from the previous call. The temporary session Id is passed in the header. This is a POST request. In the body, we pass the id of the job and the job type. The Id can be found at the end of the url of the job through the UI."}),"\n",(0,t.jsx)(n.p,{children:"The value for \u2018Accept\u2019 in the header needs to be \u2018application/xml\u2019 instead of json."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def start_job(session_id, server_url, taskId, taskType):\n    '''Use Session Id and Server URL from the user login API\n       and start the specified job'''\n    job_start_url = server_url + \"/api/v2/job\"\n    headers = {'Content-Type': 'application/json' \\\n     , 'icSessionId': session_id, 'Accept': 'application/xml'}  # this has to be xml\n    data = {'@type':'job', 'taskId':taskId, 'taskType':taskType}\n    r = requests.post(job_start_url, data=json.dumps(data), headers=headers)\n\n    if r.status_code == 200:\n        print('Job has been successfully started')\n        print(r.headers)\n\n    else:\n        print('Job failed to start with status: ' + str(r.status_code))\n        print(r.content)\n"})}),"\n",(0,t.jsx)(n.p,{children:"Execution"}),"\n",(0,t.jsx)(n.p,{children:"Now that we have functions to authenticate and trigger jobs, we can execute the entire code. You need to define your user name, password, task id and task type (for example, MTT for Mapping Configuration Task). Then you are ready to go!"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def main ():\n    username = 'your user name'\n    password = 'your password'\n    taskId = 'task id'\n    taskType = 'task type (e.g. MTT)'\n\n    login_response = get_session_id(username, password)\n    session_id = login_response[0]\n    server_url = login_response[1]\n    start_job(session_id, server_url, taskId, taskType)\n\nmain()\n"})}),"\n",(0,t.jsx)(n.p,{children:"(2018-06-17)"})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var t=s(96540);const o={},r=t.createContext(o);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);